// List of phrases
const phrases = [
    "Ian cannot beat an anaconda",
    "Teamwork makes the dream work",
    "Coffee fuels our creativity daily",
    "Together we achieve more success",
    "The early bird gets the worm"
];

let currentPhrase = "";
let score = 0;
let maxGuesses = 0;
let guesses = [];

// Wait for the DOM to be fully loaded
document.addEventListener('DOMContentLoaded', () => {
    // Add event listeners after DOM is loaded
    document.getElementById('start-game-button').addEventListener('click', startGame);
    document.getElementById('guess-button').addEventListener('click', handleGuess);
    document.getElementById('reset-button').addEventListener('click', resetGame);

    // Initialize the game when page loads
    initializeGame();
});

// Start the game with the specified score
function startGame() {
    const quizScoreInput = document.getElementById("score-input");
    const scoreValue = parseInt(quizScoreInput.value, 10);

    if (isNaN(scoreValue) || scoreValue <= 0) {
        alert("Please enter a valid quiz score!");
        return;
    }

    maxGuesses = scoreValue;
    initializeGame();
}

// Initialize the screen
function initializeGame() {
    currentPhrase = phrases[Math.floor(Math.random() * phrases.length)];
    score = 0;
    guesses = [];
    
    document.getElementById("masked-phrase").innerText = maskPhrase(currentPhrase);
    document.getElementById("score").innerText = score;
    document.getElementById("message").innerText = `You have ${maxGuesses} guesses`; 
}

// Mask the phrase
function maskPhrase(phrase) {
    return phrase.replace(/[a-zA-Z]/g, "_");
}

// Handle guesses
function handleGuess() {
    const guessInput = document.getElementById("guess-input");
    const guessedLetter = guessInput.value.toLowerCase().trim();
    guessInput.value = ""; // Clear input after guessing

    if (!guessedLetter) {
        alert("Please enter a letter!");
        return;
    }

    if (guesses.includes(guessedLetter)) {
        alert("You already guessed that letter!");
        return;
    }

    guesses.push(guessedLetter); // Keep track of guessed letters

    if (currentPhrase.toLowerCase().includes(guessedLetter)) {
        score++; 
    } else {
        maxGuesses--; // Decrease max guesses
    }

    // Check game over condition
    if (maxGuesses <= 0) {
        document.getElementById("message").innerText = "Game Over! The phrase was: " + currentPhrase;
        document.getElementById("masked-phrase").innerText = currentPhrase;
        return;
    }

    document.getElementById("score").innerText = score;
    document.getElementById("masked-phrase").innerText = getMaskedPhrase();

    // Check for complete phrase guessed
    if (isPhraseGuessed()) {
        document.getElementById("message").innerText = "Congratulations! You guessed the phrase!";
    } else {
        document.getElementById("message").innerText = `Guesses left: ${maxGuesses}`; // Show remaining guesses
    }
}

// Get the masked phrase based on guessed letters
function getMaskedPhrase() {
    return currentPhrase.split('').map(letter => {
        return guesses.includes(letter.toLowerCase()) ? letter : "_";
    }).join('');
}

// Check if the entire phrase has been guessed
function isPhraseGuessed() {
    return currentPhrase.split('').every(letter => guesses.includes(letter.toLowerCase()) || letter === " ");
}

// Reset the game
function resetGame() {
    document.getElementById("score-input").value = ""; // Clear the input field
    maxGuesses = 0;
    initializeGame(); // Re-initialize the game
}
